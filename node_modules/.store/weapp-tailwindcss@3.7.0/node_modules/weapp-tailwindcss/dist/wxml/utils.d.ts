import type { ItemOrItemArray } from '../reg';
import type { ITemplateHandlerOptions } from '../types';
import type { Token } from './Tokenizer';
import MagicString from 'magic-string';
export declare function generateCode(match: string, options?: ITemplateHandlerOptions): string;
export declare function handleEachClassFragment(ms: MagicString, tokens: Token[], options?: ITemplateHandlerOptions): void;
export declare function templateReplacer(original: string, options?: ITemplateHandlerOptions): string;
export declare function isPropsMatch(props: ItemOrItemArray<string | RegExp>, attr: string): boolean;
export declare function customTemplateHandler(rawSource: string, options: Required<ITemplateHandlerOptions>): Promise<string>;
export declare function createTemplateHandler(options?: Omit<ITemplateHandlerOptions, 'runtimeSet'>): (rawSource: string, opt?: Pick<ITemplateHandlerOptions, "runtimeSet">) => Promise<string>;
