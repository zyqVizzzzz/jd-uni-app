import type { PackageJson } from 'pkg-types';
import type { FetchOptions } from './npm';
export interface CreateContextOptions {
    cwd: string;
    pkgJsonBasename?: string;
    postcssConfigBasename?: string;
    tailwindConfigBasename?: string;
    fetchOptions?: FetchOptions;
}
export declare function createContext(options: Required<CreateContextOptions>): Promise<{
    pkgJson: PackageJson;
    pkgJsonPath: string;
    cwd: string;
    versions: {
        tailwindcss: string;
        postcss: string;
        autoprefixer: string;
        'weapp-tailwindcss': string;
    };
    postcssConfigBasename: string;
    tailwindConfigBasename: string;
    readonly type: "module" | "commonjs" | undefined;
} | undefined>;
export type Context = Exclude<Awaited<ReturnType<typeof createContext>>, undefined>;
export declare function updatePackageJson(ctx: Context): Promise<void>;
export declare function touchPostcssConfig(ctx: Context): Promise<void>;
export declare function touchTailwindConfig(ctx: Context): Promise<void>;
export declare function getInitDefaults(): {
    cwd: string;
    postcssConfigBasename: string;
    tailwindConfigBasename: string;
    pkgJsonBasename: string;
};
export declare function init(options?: CreateContextOptions): Promise<void>;
