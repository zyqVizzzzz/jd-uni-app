import plugin from 'tailwindcss/plugin';
import { d as defu } from '../defu-n46TJT6t.mjs';
import { c as createMediaQuery, a as createNegativeMediaQuery } from '../constants-Dy2Dd3Fz.mjs';

const cssMacro = plugin.withOptions((options) => {
    const { dynamic: dynamicMode, variantsMap } = defu(options, {
        dynamic: true,
        variantsMap: {},
    });
    return ({ matchVariant, addVariant }) => {
        if (dynamicMode) {
            matchVariant('ifdef', (value) => {
                return createMediaQuery(value);
            });
            matchVariant('ifndef', (value) => {
                return createNegativeMediaQuery(value);
            });
        }
        for (const [name, obj] of Object.entries(variantsMap)) {
            if (typeof obj === 'string') {
                addVariant(name, createMediaQuery(obj));
            }
            else {
                addVariant(name, obj.negative ? createNegativeMediaQuery(obj.value) : createMediaQuery(obj.value));
            }
        }
    };
});

export { cssMacro as default };
